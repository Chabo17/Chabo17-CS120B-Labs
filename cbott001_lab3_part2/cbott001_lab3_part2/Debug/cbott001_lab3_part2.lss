
cbott001_lab3_part2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000016a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000116  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000016a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000019c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  000001dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000086b  00000000  00000000  00000204  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007d1  00000000  00000000  00000a6f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002a4  00000000  00000000  00001240  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  000014e4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003fb  00000000  00000000  00001518  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000003f  00000000  00000000  00001913  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00001952  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	54 c0       	rjmp	.+168    	; 0xaa <__ctors_end>
   2:	00 00       	nop
   4:	5a c0       	rjmp	.+180    	; 0xba <__bad_interrupt>
   6:	00 00       	nop
   8:	58 c0       	rjmp	.+176    	; 0xba <__bad_interrupt>
   a:	00 00       	nop
   c:	56 c0       	rjmp	.+172    	; 0xba <__bad_interrupt>
   e:	00 00       	nop
  10:	54 c0       	rjmp	.+168    	; 0xba <__bad_interrupt>
  12:	00 00       	nop
  14:	52 c0       	rjmp	.+164    	; 0xba <__bad_interrupt>
  16:	00 00       	nop
  18:	50 c0       	rjmp	.+160    	; 0xba <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4e c0       	rjmp	.+156    	; 0xba <__bad_interrupt>
  1e:	00 00       	nop
  20:	4c c0       	rjmp	.+152    	; 0xba <__bad_interrupt>
  22:	00 00       	nop
  24:	4a c0       	rjmp	.+148    	; 0xba <__bad_interrupt>
  26:	00 00       	nop
  28:	48 c0       	rjmp	.+144    	; 0xba <__bad_interrupt>
  2a:	00 00       	nop
  2c:	46 c0       	rjmp	.+140    	; 0xba <__bad_interrupt>
  2e:	00 00       	nop
  30:	44 c0       	rjmp	.+136    	; 0xba <__bad_interrupt>
  32:	00 00       	nop
  34:	42 c0       	rjmp	.+132    	; 0xba <__bad_interrupt>
  36:	00 00       	nop
  38:	40 c0       	rjmp	.+128    	; 0xba <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3e c0       	rjmp	.+124    	; 0xba <__bad_interrupt>
  3e:	00 00       	nop
  40:	3c c0       	rjmp	.+120    	; 0xba <__bad_interrupt>
  42:	00 00       	nop
  44:	3a c0       	rjmp	.+116    	; 0xba <__bad_interrupt>
  46:	00 00       	nop
  48:	38 c0       	rjmp	.+112    	; 0xba <__bad_interrupt>
  4a:	00 00       	nop
  4c:	36 c0       	rjmp	.+108    	; 0xba <__bad_interrupt>
  4e:	00 00       	nop
  50:	34 c0       	rjmp	.+104    	; 0xba <__bad_interrupt>
  52:	00 00       	nop
  54:	32 c0       	rjmp	.+100    	; 0xba <__bad_interrupt>
  56:	00 00       	nop
  58:	30 c0       	rjmp	.+96     	; 0xba <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2e c0       	rjmp	.+92     	; 0xba <__bad_interrupt>
  5e:	00 00       	nop
  60:	2c c0       	rjmp	.+88     	; 0xba <__bad_interrupt>
  62:	00 00       	nop
  64:	2a c0       	rjmp	.+84     	; 0xba <__bad_interrupt>
  66:	00 00       	nop
  68:	28 c0       	rjmp	.+80     	; 0xba <__bad_interrupt>
  6a:	00 00       	nop
  6c:	26 c0       	rjmp	.+76     	; 0xba <__bad_interrupt>
  6e:	00 00       	nop
  70:	24 c0       	rjmp	.+72     	; 0xba <__bad_interrupt>
  72:	00 00       	nop
  74:	22 c0       	rjmp	.+68     	; 0xba <__bad_interrupt>
  76:	00 00       	nop
  78:	20 c0       	rjmp	.+64     	; 0xba <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1e c0       	rjmp	.+60     	; 0xba <__bad_interrupt>
  7e:	00 00       	nop
  80:	1c c0       	rjmp	.+56     	; 0xba <__bad_interrupt>
  82:	00 00       	nop
  84:	1a c0       	rjmp	.+52     	; 0xba <__bad_interrupt>
  86:	00 00       	nop
  88:	18 c0       	rjmp	.+48     	; 0xba <__bad_interrupt>
  8a:	00 00       	nop
  8c:	74 00       	.word	0x0074	; ????
  8e:	74 00       	.word	0x0074	; ????
  90:	76 00       	.word	0x0076	; ????
  92:	76 00       	.word	0x0076	; ????
  94:	78 00       	.word	0x0078	; ????
  96:	78 00       	.word	0x0078	; ????
  98:	7a 00       	.word	0x007a	; ????
  9a:	7a 00       	.word	0x007a	; ????
  9c:	7a 00       	.word	0x007a	; ????
  9e:	7c 00       	.word	0x007c	; ????
  a0:	7c 00       	.word	0x007c	; ????
  a2:	7c 00       	.word	0x007c	; ????
  a4:	7e 00       	.word	0x007e	; ????
  a6:	7e 00       	.word	0x007e	; ????
  a8:	7e 00       	.word	0x007e	; ????

000000aa <__ctors_end>:
  aa:	11 24       	eor	r1, r1
  ac:	1f be       	out	0x3f, r1	; 63
  ae:	cf ef       	ldi	r28, 0xFF	; 255
  b0:	d0 e4       	ldi	r29, 0x40	; 64
  b2:	de bf       	out	0x3e, r29	; 62
  b4:	cd bf       	out	0x3d, r28	; 61
  b6:	02 d0       	rcall	.+4      	; 0xbc <main>
  b8:	2c c0       	rjmp	.+88     	; 0x112 <_exit>

000000ba <__bad_interrupt>:
  ba:	a2 cf       	rjmp	.-188    	; 0x0 <__vectors>

000000bc <main>:
{
    //ok so A0-3 is what the fuel level is at
	// then PC5-0 should graphically show what the fuel is at starts at C5 and you add more bits when you go up by 2
	//PC6 is low fuel and it lights up when fuel is 4 or less
	
	DDRA = 0x00; PORTA = 0xFF; // Configure port A's 8 pins as inputs, initialize to 1s
  bc:	11 b8       	out	0x01, r1	; 1
  be:	8f ef       	ldi	r24, 0xFF	; 255
  c0:	82 b9       	out	0x02, r24	; 2
	DDRC = 0xFF; PORTC = 0x00;
  c2:	87 b9       	out	0x07, r24	; 7
  c4:	18 b8       	out	0x08, r1	; 8
		break;
		
		case 13:
		case 14:
		case 15:
		PORTC = 0x3F;
  c6:	7f e3       	ldi	r23, 0x3F	; 63
		break;
		
		case 10:
		case 11:
		case 12:
		PORTC = 0x3E;
  c8:	6e e3       	ldi	r22, 0x3E	; 62
		break;
		
		case 7:
		case 8:
		case 9:
		PORTC = 0x3C;
  ca:	5c e3       	ldi	r21, 0x3C	; 60
		PORTC = 0x70;
		break;
		
		case 5:
		case 6:
		PORTC = 0x38;
  cc:	48 e3       	ldi	r20, 0x38	; 56
		PORTC = 0x60;
		break;	
		
		case 3:
		case 4:
		PORTC = 0x70;
  ce:	30 e7       	ldi	r19, 0x70	; 112
		unsigned char temp = PINA;
		
		switch(temp){
		case 1:
		case 2:
		PORTC = 0x60;
  d0:	20 e6       	ldi	r18, 0x60	; 96
	
	DDRA = 0x00; PORTA = 0xFF; // Configure port A's 8 pins as inputs, initialize to 1s
	DDRC = 0xFF; PORTC = 0x00;
    while (1) 
    {
		unsigned char temp = PINA;
  d2:	e0 b1       	in	r30, 0x00	; 0
		
		switch(temp){
  d4:	8e 2f       	mov	r24, r30
  d6:	90 e0       	ldi	r25, 0x00	; 0
  d8:	fc 01       	movw	r30, r24
  da:	31 97       	sbiw	r30, 0x01	; 1
  dc:	ef 30       	cpi	r30, 0x0F	; 15
  de:	f1 05       	cpc	r31, r1
  e0:	c0 f7       	brcc	.-16     	; 0xd2 <main+0x16>
  e2:	ea 5b       	subi	r30, 0xBA	; 186
  e4:	ff 4f       	sbci	r31, 0xFF	; 255
  e6:	0c c0       	rjmp	.+24     	; 0x100 <__tablejump2__>
		case 1:
		case 2:
		PORTC = 0x60;
  e8:	28 b9       	out	0x08, r18	; 8
		break;	
  ea:	f3 cf       	rjmp	.-26     	; 0xd2 <main+0x16>
		
		case 3:
		case 4:
		PORTC = 0x70;
  ec:	38 b9       	out	0x08, r19	; 8
		break;
  ee:	f1 cf       	rjmp	.-30     	; 0xd2 <main+0x16>
		
		case 5:
		case 6:
		PORTC = 0x38;
  f0:	48 b9       	out	0x08, r20	; 8
		break;
  f2:	ef cf       	rjmp	.-34     	; 0xd2 <main+0x16>
		
		case 7:
		case 8:
		case 9:
		PORTC = 0x3C;
  f4:	58 b9       	out	0x08, r21	; 8
		break;
  f6:	ed cf       	rjmp	.-38     	; 0xd2 <main+0x16>
		
		case 10:
		case 11:
		case 12:
		PORTC = 0x3E;
  f8:	68 b9       	out	0x08, r22	; 8
		break;
  fa:	eb cf       	rjmp	.-42     	; 0xd2 <main+0x16>
		
		case 13:
		case 14:
		case 15:
		PORTC = 0x3F;
  fc:	78 b9       	out	0x08, r23	; 8
		break ;
  fe:	e9 cf       	rjmp	.-46     	; 0xd2 <main+0x16>

00000100 <__tablejump2__>:
 100:	ee 0f       	add	r30, r30
 102:	ff 1f       	adc	r31, r31
 104:	00 24       	eor	r0, r0
 106:	00 1c       	adc	r0, r0
 108:	0b be       	out	0x3b, r0	; 59
 10a:	07 90       	elpm	r0, Z+
 10c:	f6 91       	elpm	r31, Z
 10e:	e0 2d       	mov	r30, r0
 110:	09 94       	ijmp

00000112 <_exit>:
 112:	f8 94       	cli

00000114 <__stop_program>:
 114:	ff cf       	rjmp	.-2      	; 0x114 <__stop_program>
